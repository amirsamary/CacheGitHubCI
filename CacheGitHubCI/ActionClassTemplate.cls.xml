<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for UNIX (Apple Mac OS X for x86-64) 2016.2 (Build 734U)" ts="2016-11-15 19:52:04">
<Class name="CacheGitHubCI.ActionClassTemplate">
<Description>
This is a suggestion of a class from which a system that is using CGCI could inhirit from
to define actions that could be called by CGCI during the Update() action.
Of course that the update hook must be edited to call these class methods on the correct 
namespace.

If you already have a hook defined and wants to configure it to delegate the action calls to
a class that inherit from this one on the namespace where the update is being applyed, just
call the method SetupHookObj(pHook) or SetupHook(pHookId).</Description>
<Super>%RegisteredObject</Super>
<TimeChanged>64224,65760.674491</TimeChanged>
<TimeCreated>64224,65249.485494</TimeCreated>

<Method name="OnPreCompile">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	Quit $$$OK
]]></Implementation>
</Method>

<Method name="OnPostCompile">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	Quit $$$OK
]]></Implementation>
</Method>

<Method name="OnUnitTests">
<ClassMethod>1</ClassMethod>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[	Quit $$$OK
]]></Implementation>
</Method>

<Method name="SetupHook">
<ClassMethod>1</ClassMethod>
<FormalSpec>pHookId:%String,pClassName:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set oHook = ##class(Hook).%OpenId(pHookId)
	Quit ..SetupHookObj(oHook, pClassName)
]]></Implementation>
</Method>

<Method name="SetupHookObj">
<Description>
Sets up an existing hook to call actions on the namespace where the code is
being deployed. The class pClassName must be defined on the namespace where
the code is being deployed and must inherit from this class (through package mapping)
or simply have the expected methods (OnPreCompile, OnPostCompile and OnUnitTests).</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>pHook:Hook,pClassName:%String</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	Set pHook.PreCompile.Type="classmethod"
	Set pHook.PreCompile.Namespace=pHook.Namespace
	Set pHook.PreCompile.Params=pClassName_",OnPreCompile"
	
	Set pHook.PostCompile.Type="classmethod"
	Set pHook.PostCompile.Namespace=pHook.Namespace
	Set pHook.PostCompile.Params=pClassName_",OnPostCompile"
	
	Set pHook.UnitTests.Type="classmethod"
	Set pHook.UnitTests.Namespace=pHook.Namespace
	Set pHook.UnitTests.Params=pClassName_",OnUnitTests"
	
	Quit pHook.%Save()
]]></Implementation>
</Method>
</Class>
</Export>
